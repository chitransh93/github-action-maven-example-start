
name: Maven CI/CD

on:
 push:
    branches: [ master ]
 pull_request:
    branches: [ master ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache the maven packages to reduce time taken.
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml')}}
        restore-keys: ${{ runner.os }}-m2
     #This action is for caching dependencies.
     #cache found: fetched and stored in path
     #restore-keys: cache miss- try to find in path povided in restore-keys.
     #cache miss: download cache and store in path.

    - name: Build project with Maven
      run: mvn -B package --file pom.xml
      
  publish-job:
      runs-on: ubuntu-latest
      needs: [build_and_test]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 14
        - run: mvn -B package --file pom.xml -DskipTests
        - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
        - uses: actions/upload-artifact@v1
          with:
            name: Package
            path: staging
 #publish-job:
 #To publish the artifacts back to the action run.
 #    needs: [build_and_test] :: 
 #       will run only if build_and_test job is a success.
 #    mvn -B package --file pom.xml -DskipTests :: 
 #      -DskipTests is passed because we dont want to test again.
 #    actions/upload-artifact@v1
 #       used to deploy all .jar files in staging folder to action(in Package)
  build-docker-image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Container image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}
